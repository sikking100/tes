openapi: '3.0.2'
info:
  title: Activity API
  version: 1.0.0
servers:
  - description: develop
    url: https://apigateway-service-ckndvuglva-et.a.run.app
  - description: local
    url: http://localhost:8080
paths:
  /activity/v1:
    post:
      tags: ["activity"]
      summary: "[employee]"
      description: Create Activity
      requestBody:
        $ref: '#/components/requestBodies/SaveActivity'
      responses:
        200:
          $ref: '#/components/responses/Activity'  
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        500:
          $ref: '#/components/responses/500'
    get:
      tags: ["activity"]
      summary: "[all user]" 
      description: find activity
      parameters: 
        - name: num
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            maximum: 100
      responses:
        200:
          $ref: '#/components/responses/Page'  
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'  
        500:
          $ref: '#/components/responses/500'    
  /activity/v1/{id}:
    get:
      tags: ["activity"]
      summary: "[all user]"
      description: find activity by id
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        200:
          $ref: '#/components/responses/Activity'  
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'  
        500:
          $ref: '#/components/responses/500'
    put:
      tags: ["activity"]    
      summary: "[employee]"
      description: update activity by id
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/SaveActivity'
      responses:
        200:
          $ref: '#/components/responses/Activity'  
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'  
        500:
          $ref: '#/components/responses/500'
    delete:
      tags: ["activity"]
      summary: "[employee]"
      description: update activity by id
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        200:
          $ref: '#/components/responses/Activity'  
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'  
        500:
          $ref: '#/components/responses/500'
  /activity/v1/event/new-image:
    post:
      tags: ["activity"]
      summary: "[event]"
      description: update activity image
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                id:
                  type: string
                  example: "bucket-name/activity/{id}/thumbs/{file-name.ext}/{file-id}"
                contentType:
                  type: string
                  example: "image/webp"
      responses:
        200:
          description: "ok"
          content:
            application/json:
              schema:
                type: object
                properties:
                  code:
                    default: 200
                  data:
                     type: string 
                  errors:
                    type: string
                    nullable: true
                    default: null    
        400:
          $ref: '#/components/responses/400'
        500:
          $ref: '#/components/responses/500'   
  /comment/v1:
    get:
      tags: ["comment"]
      summary: "[all user]"
      description: find comment
      parameters:
        - name: activityId
          in: query
          required: true
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/responses/ListComment'  
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'  
        500:
          $ref: '#/components/responses/500'
    post:
      tags: ["comment"]
      summary: "[employee]"
      description: Create Comment
      requestBody:
        $ref: '#/components/requestBodies/SaveComment'
      responses:
        200:
          $ref: '#/components/responses/Comment'  
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'  
        500:
          $ref: '#/components/responses/500'
  /comment/v1/{id}:
    get:
      tags: ["comment"]
      summary: "[all user]"
      description: find comment by id
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        200:
          $ref: '#/components/responses/Comment'  
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'  
        500:
          $ref: '#/components/responses/500'
    put:
      tags: ["comment"]
      summary: "[employee]"
      description: update comment by id
      parameters:
        - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/SaveComment'
      responses:
        200:
          $ref: '#/components/responses/Comment'  
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'  
        500:
          $ref: '#/components/responses/500'    
    delete:
      tags: ["comment"]    
      summary: "[employee]"
      description: delete comment by id
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        200:
          $ref: '#/components/responses/Comment'  
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'
        500:
          $ref: '#/components/responses/500'
  
components:
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
  schemas:
    Creator:
      type: object
      properties:
        id: 
          type: string
        name:
          type: string
        roles:
          type: integer
        imageUrl:
          type: string
        description:
          type: string
          description: "Branch Name/Region Name/-"
    Comment:
      type: object
      properties:
        id:
          type: string
        activityId:
          type: string
        comment:
          type: string
        creator:
          $ref: '#/components/schemas/Creator'
        createdAt:
          type: string
          format: date-time 
    Activity:
      type: object
      properties:
        id:
          type: string
        title:
          type: string
        description:
          type: string
        videoUrl:
          type: string
          format: url
        imageUrl:
          type: string
        comment:
          type: array
          items:
            $ref: '#/components/schemas/Comment'
        commentCount:
          type: integer
        creator:
          $ref: '#/components/schemas/Creator'
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    SaveActivity:
      type: object
      properties:
        title:
          type: string
        description:
          type: string
        videoUrl:
          type: string
          format: url
        creator:
          $ref: '#/components/schemas/Creator'
    SaveComment:
      type: object
      properties:
        activityId: 
          type: string
        comment: 
          type: string
        creator:
          $ref: '#/components/schemas/Creator'
    Page:
      type: object
      properties:
        back:
          type: integer
          nullable: true
          default: null
        next:
          type: integer
          nullable: true
          default: null
        limit:
          type: integer
          default: 20
        items:
          type: array
          items:
            $ref: '#/components/schemas/Activity'
  requestBodies:
    SaveActivity:
      description: Activity Object
      content:
        application/json:
          schema:
           $ref: '#/components/schemas/SaveActivity'
    SaveComment:
      description: Comment Object
      content:
        application/json:
          schema:
           $ref: '#/components/schemas/SaveComment'
  responses:
    Activity:
      description: "ok"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 200
              data:
                $ref: '#/components/schemas/Activity'
              errors:
                type: string
                nullable: true
                default: null  
    Comment:
      description: "ok"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 200
              data:
                $ref: '#/components/schemas/Comment' 
              errors:
                type: string
                nullable: true
                default: null  
    Page:
      description: "ok"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 200
              data:
                $ref: '#/components/schemas/Page'
              errors:
                type: string
                nullable: true
                default: null  
    ListComment:
      description: "ok"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 200
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Comment'
              errors:
                type: string
                nullable: true
                default: null
                    
    400:
      description: "Invalid input"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 400
              data:
                default: null  
              errors:
                type: string
                default: "Invalid input"
    401:
      description: "unauthorized"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 401
              data:
                default: null
              errors:
                type: string
                default: "unauthorized"  
    404:
      description: "not found"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 404
              data:
                default: null
              errors:
                type: string
                default: "not found"  
    500:
      description: "the system is busy, please try again later"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 500
              data:
                default: null
              errors:
                type: string
                default: "the system is busy, please try again later"  
  securitySchemes:
    local:
      type: apiKey
      in: header
      name: Auth-User
    authjwt:
      type: http
      scheme: bearer
      bearerFormat: JWT  
security:
  - local: []
  - authjwt: []