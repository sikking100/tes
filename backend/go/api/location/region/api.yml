openapi: 3.0.3
info:
  title: Region Api
  version: 1.0.0
servers:
  - description: develop
    url: https://apigateway-service-ckndvuglva-et.a.run.app
  - description: local
    url: http://localhost:8080
paths:   
  /location-region/v1:
    get:
      summary: "[all user]"
      description: "find region"
      parameters: 
        - name: num
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
        - name: limit
          in: query
          required: true
          schema:
            type: integer
            minimum: 1
            maximum: 100
        - name: search
          in: query
          required: false
          schema:
            type: string
      responses:
        200:
          $ref: '#/components/responses/Page'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        500:
          $ref: '#/components/responses/500'   
  /location-region/v1/{id}:
    post:
      summary: "[system admin]"
      description: "upsert region by id"
      parameters: 
       - $ref: '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/Save'
      responses:
        200:
          $ref: '#/components/responses/Region'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401' 
        500:
          $ref: '#/components/responses/500'
    get:
      summary: "[system admin]"
      description: "find region by id"
      parameters: 
        - $ref: '#/components/parameters/id'
      responses:
        200:
          $ref: '#/components/responses/Region'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'  
        500:
          $ref: '#/components/responses/500'
    delete:
      summary: "[system admin]"
      description: "delete region by id"
      parameters: 
        - $ref: '#/components/parameters/id'
      responses:
        200:
          $ref: '#/components/responses/Region'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        404:
          $ref: '#/components/responses/404'  
        500:
          $ref: '#/components/responses/500'
components:
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string    
  schemas:
    Region:
      type: object
      properties:
        id: 
          type: string
        name:
          type: string
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
    Save:
      type: object
      properties:
        name:
          type: string
    Page:
      type: object
      properties:
        back:
          type: integer
          nullable: true
          default: null
        next:
          type: integer
          nullable: true
          default: null
        limit:
          type: integer
          default: 20
        search:
          type: string
        items:
          type: array
          items:
            $ref: '#/components/schemas/Region'
  requestBodies:
    Save:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Save'         
  responses:
    Region:
      description: "ok"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 200
              data:
                 $ref: '#/components/schemas/Region'
              errors:
                type: string
                nullable: true
                default: null
    Page:
      description: "ok"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 200
              data:
                $ref: '#/components/schemas/Page'
              errors:
                type: string
                nullable: true
                default: null
    400:
      description: "Invalid input"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 400
              data:
                default: null  
              errors:
                type: string
                default: "Invalid input"
    401:
      description: "unauthorized"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 401
              data:
                default: null
              errors:
                type: string
                default: "unauthorized"  
    404:
      description: "not found"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 404
              data:
                default: null
              errors:
                type: string
                default: "not found"  
    500:
      description: "the system is busy, please try again later"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 500
              data:
                default: null
              errors:
                type: string
                default: "the system is busy, please try again later"
  securitySchemes:
    local:
      type: apiKey
      in: header
      name: Auth-User
    authjwt:
      type: http
      scheme: bearer
      bearerFormat: JWT  
security:
  - local: []
  - authjwt: []