openapi: '3.0.2'
info:
  title: Help API
  version: 1.0.0
servers:
  - description: develop
    url: https://apigateway-service-ckndvuglva-et.a.run.app
  - description: local
    url: http://localhost:8080
paths:
  /help/v1/help: 
    get:
      summary: Find Help/Question List
      description: For Question Need to insert UserId or IsAnswered
      tags: ["ALL USER"]
      parameters:
        - name: num
          in: query
          required: false
          schema:
            type: integer
            minimum: 1
        - name: limit
          in: query
          required: false
          schema:
            type: integer
            maximum: 100
        - name: search
          in: query
          required: false
          schema:
            type: string
        - name: isHelp
          in: query
          required: false
          schema:
            type: boolean
        - name: userId
          in: query
          required: false
          schema:
            type: string
        - name: isAnswered
          in: query
          required: false
          schema:
            type: boolean
      responses:
        '200':
          $ref: '#/components/responses/Page'  
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    post:
      summary: Create Help
      description: Create Help
      tags: ["SYSTEM ADMIN"]
      requestBody:
        $ref: '#/components/requestBodies/SaveHelp'
      responses:
        '200':
          $ref: '#/components/responses/Help'  
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  
  /help/v1/question: 
    post:
      summary: Create Question
      description: Create Question
      tags: ["ALL USER"]
      requestBody:
        $ref: '#/components/requestBodies/SaveQuestion'
      responses:
        '200':
          $ref: '#/components/responses/Help'  
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '500':
          $ref: '#/components/responses/500'
  
  /help/v1/question/{id}:
    put:
      summary: Answer Question
      description: Answer Question with given Id
      tags: ["SYSTEM ADMIN"]
      parameters:
        - "$ref": '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/Answer'   
      responses:
        200:
          $ref: '#/components/responses/Help'
        400:
          $ref: '#/components/responses/400' 
        401:
          $ref: '#/components/responses/401' 
        404:
          $ref: '#/components/responses/404'  
        500:
          $ref: '#/components/responses/500'  
  
  /help/v1/help/{id}:
    get:
      summary: Find Help/Question By Id
      description: Find Help/Question By Given Id
      tags: ["ALL USER"]
      parameters:
        - $ref: '#/components/parameters/id'
      responses:
        '200':
          $ref: '#/components/responses/Help'  
        '400':
          $ref: '#/components/responses/400'
        '401':
          $ref: '#/components/responses/401'
        '404':
          $ref: '#/components/responses/404'
        '500':
          $ref: '#/components/responses/500'
    put:
      summary: Update Help
      description: Update Help with given Id
      tags: ["SYSTEM ADMIN"]
      parameters:
        - "$ref": '#/components/parameters/id'
      requestBody:
        $ref: '#/components/requestBodies/SaveHelp'   
      responses:
        200:
          $ref: '#/components/responses/Help'
        400:
          $ref: '#/components/responses/400' 
        401:
          $ref: '#/components/responses/401' 
        404:
          $ref: '#/components/responses/404'  
        500:
          $ref: '#/components/responses/500'  
    delete:
      summary: Delete Help/Question
      description: Delete Help/Question with given Id
      tags: ["ALL USER"]
      parameters:
        - "$ref": '#/components/parameters/id'  
      responses:
        200:
          $ref: '#/components/responses/Help'
        400:
          $ref: '#/components/responses/400'
        401:
          $ref: '#/components/responses/401'
        403:
          $ref: '#/components/responses/403'  
        404:
          $ref: '#/components/responses/404'  
        500:
          $ref: '#/components/responses/500' 

  
components:
  parameters:
    id:
      name: id
      in: path
      required: true
      schema:
        type: string
  schemas:
    Help:
      type: object
      properties:
        id:
          type: string
          example: 001
        topic:
          type: string
          example: Profile Update
        question:
          type: string
          example: Bagaimana Cara Mengubah Foto Profile
        answer:
          type: string
          example: Klik Foto Profile di sudut kanan atas, lalu pilih ganti foto profile
        creator:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            roles:
              type: number
            imageUrl:
              type: string
            description:
              type: string
              default: "Branch Name/Region Name/-"
        createdAt:
          type: string
        updatedAt:
          type: string
    Answer:
      type: object
      properties:
        answer:
          type: string
          example: Ini Jawaban   
    SaveHelp:
      type: object
      properties:
        topic:
          type: string
          example: Profile Update
        question:
          type: string
          example: Bagaimana Cara Mengubah Foto Profile
        answer:
          type: string
          example: Klik Foto Profile di sudut kanan atas, lalu pilih ganti foto profile
        creator:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            roles:
              type: number
            imageUrl:
              type: string
            description:
              type: string
              default: "Branch Name/Region Name/-"
    SaveQuestion:
      type: object
      properties:
        question:
          type: string
          example: Bagaimana Cara Mengubah Foto Profile
        creator:
          type: object
          properties:
            id:
              type: string
            name:
              type: string
            roles:
              type: number
            imageUrl:
              type: string
            description:
              type: string
              default: "Branch Name/Region Name/-"
    Page:
      type: object
      properties:
        back:
          type: integer
          nullable: true
          default: null
        next:
          type: integer
          nullable: true
          default: null
        limit:
          type: integer
          default: 20
        items:
          type: array
          items:
            $ref: '#/components/schemas/Help'   
  
  requestBodies:
    SaveHelp:
      description: Help Object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SaveHelp'
    SaveQuestion:
      description: Question Object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/SaveQuestion'
    Answer:
      description: Answer Object
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Answer'
  responses:
    Help:
      description: "ok"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 200
              data:
                $ref: '#/components/schemas/Help'
              errors:
                type: string
                nullable: true
                default: null  
    Page:
      description: "ok"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 200
              data:
                $ref: '#/components/schemas/Page'
              errors:
                type: string
                nullable: true
                default: null  
    400:
      description: "Invalid input, make sure all inputs are correct"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 400
              data:
                default: null  
              errors:
                type: string
                default: "Invalid input"
    401:
      description: "unauthorized"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 401
              data:
                default: null
              errors:
                type: string
                default: "unauthorized"
    403:
      description: "forbidden"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 403
              data:
                default: null
              errors:
                type: string
                default: "forbidden"
    404:
      description: "id help not found"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 404
              data:
                default: null
              errors:
                type: string
                default: "not found"
    500:
      description: "the system is busy, please try again later"
      content:
        application/json:
          schema:
            type: object
            properties:
              code:
                default: 500
              data:
                default: null
              errors:
                type: string
                default: "the system is busy, please try again later"  

  securitySchemes:
    local:
      type: apiKey
      in: header
      name: Auth-User
    authjwt:
      type: http
      scheme: bearer
      bearerFormat: JWT  
security:
  - local: []
  - authjwt: []